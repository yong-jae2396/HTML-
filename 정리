- 태그 종류 - 

- 본문이 아닌 태그 (head) -

<title> </title> = 사이트 타이틀 이름을 정할때 사용 

-------------------------------------------------------------------------------------------------------------
- 본문에 들어가는 태그 (body) -

1. <strong> </strong> : 문자를 강조하여 진하게 표시함

2. <h1> </h1>  ~  <h6> </h6> : 제목으로 처리 할떄 숫자가 커질수록 사이즈가 작아짐 (Heading 1 ~6 : 제목)

3. <a> </a> : 링크 걸때 사용하는 태그 (Anchor 닺)

4. <li> </li> : (list)

5. <ol> </ol> : 리스트에 순서를 매기며 그룹핑하는 태그 (Ordered List : 순서가 있는 목록)

6. <ul> </ul> : 리스트에 순서 없이 그룹핑 하는 태그 (Unordered List : 순서가 없는 목록)

7. <p> </p> : 단락을 구분할때 사용 줄바꿈이 2번되는 태그 (Paragraph : 단락)

8. <br> : 강제 줄바꿈이 되는 태그 (Line break)

9. <img> : 속성들을 사용하여 이미지를 삽입 할 수 있는 태그

10. <table> </table>  : 표를 만들기 위해 나온 태그이지만 * 과거에는 레이아웃을 만드는데에도 사용 했다 
      <td> </td> : (table data)
      <tr> </tr> : (table row)

11. <form> : 사용자가 입력한 정보를 전송하는 태그
      <input> : 사용자의 정보를 입력 받는 태그 (기본값을 지정할때 value를 사용)
      <textarea> </textarea> :  여러줄을 입력받고 싶을 때 사용하는 태그 (기본값을 지정할때 태그 사이에 적는다)
      <option> </option> : 태그한것을 항목으로 만들어주는 태그
      <select> </select> : option으로 감싸진 항목들을 옵션메뉴로 만들어주는 태그
      <label> </label> :  문자를 지정하여 커서가 박스로 이동되게 하는 태그 속성을 이용하거나 태그로 감싸는 방법이 있다.

12.<iframe> </iframe> : 다른사이트에 문서를 그대로 가져오는 태그 동영상 같은 형식도 끌어올 수 있다.     
   (보안적 측면에서 취약함) : 그래서 예방하는 방법으로 sandbox라는 속성을 사용한다.

13. <video> </video> : 동영상을 가져오는 태그
      <source> : src 속성을 사용하여 링크를 거는등 여러가지를 집어넣는 태그
      
-------------------------------------------------------------------------------------------------------------
- 속성 -

<a>
  * href = "" 링크주소를 걸때 사용
  * target = "_blank" = 새탭에서 링크를 열때

<img>
  * src = "" 이미지 링크 주소를 적는다
  * alt = 이미지가 만약 깨지거나 오류로 송출이 안될때 나오는 문자를 적는 태그 (alternative text : 대체 가능한)
<form> 
  * action = "" 정보를 전송할 주소를 적는다
  * method = 데이터를 전송하는 방식을 지정하는 속성
      - post = 데이터를 정송할때 url이 아니라 다른방법으로 숨겨서 데이터를 전송한다.
      - get = url을 통한 데이터 전송방법 (method를 따로 지정하지 않으면 get 방법으로 전송된다)
  * autocomplete = 사용자가 입력한 정보를 다시 자동으로 띄어주는 속성 (on, off)
                   (자동으로 띄워지는것을 안하게 할려는 칸은 off를 지정하여 할 수 있다.)
<input>
  * value = 입력하기 전에 입력칸에 기본값을 띄워 놓을수 있다
  * name = 사용자로부터 입력받은 것에 대해 이름을 지정
  * placeholder = 입력칸에 사용자가 무엇을 해야하는지 적어놓을 수 있는 기능을하고 사용자가 입력시 사라진다.
  * autofocus = 사용자가 사이트에 접속했을때 커서의 위치를 지정하는 속성
  * reauired = 사용자가 필수로 입력해야 할때 쓰는 속성으로 입력하지 않고 실행하면 경고문이 뜬다
  * pattern = 안에 들어가는 것은 정규표현식이고 사용자가 입력하는것을 제한하여 설정할 수 있다. 
             (. 은 어떤 문자든 상관 없다는 뜻, + 어떤 문자를 쓰던 하나이상 오게해야한다는 조건)
  * type = 사용자로부터 입력받은 것에 타입을 지정한다 
    - text = 문자로 타입을 지정
    - submit = 제출할 수 있는 버튼을 만들어준다
    - password = 비밀번호를 적는 칸을 만드는 것으로 글자가 가려진다
    - radio = 선택할 수 있는 원을 만듬 (중복 선택 불가)
    - checkbox = 선택할 수 있는 박스를 만듬 (중복 선택 가능)
    - button = 버튼이 생겨나지만 글자가 없는 빈박스이고 value를 사용하여 text를 입력해야한다
               (submit과 달리 따로 서버로 이동 하지는 않는다. * js랑 같이 사용할때만 의미 있음)
    - reset = <form>안에있는 사용자가 입력한 데이터를 초기화 해준다.
    - hidden = UI이 없이 서버로 데이터가 보내진다.
    - number = 사용자가 작성을 숫자만 할수있게 제한하는 속성 
        (모바일에서 작성할때도 사용자가 숫자를 쓰도록 숫자키를 띄어 강제할수 있는 태그이다.)
    - min, max = 사용자가 적을수 있는 수의 범위를 제한 할 수 있다.
       (제한한것 외로 작성할 경우 유효하지 않다고 경고문이 뜨며 실행되지 않는다.)
    - date = 사용자가 날짜를 입력할 수 있도록 만들어주는 속성
    - color = 사용자가 RGB컬러를 기반으로 색상을 선택할 수 있게 해주는 속성
    - range = 사용자가 슬라이스를 움직이면서 정해놓은 범위안에서 선택할 수 있게 해주는 속성
    - email : 사용자가 이메일만 적을 수 있게 제한하는 속성 (이메일외의 것을 적으면 제출이 안된다.

<textarea>
  * cols = 열의 글자수를 지정 (columns)
  * rows = 행의 글자수를 지정 (row)

<select>
  * multiple = 사용자가 옵션을 선택할때 다중으로 선택할 수 있게 해주는 속성 (따로 속성 값은 없음)
  * name = option으로 태그한 것들에 대해 이름을 지정
  * value = option으로 태그한 것들에 name에대한 기본값을 띄워 놓을수 있다

<label>
  * for = id값을 지정하여 레이블이 작동되게 한다 label과 input태그에 사용하여 연결 시켜주는 속성

<iframe>
  * src = 외부컨텐츠의 주소를 넣는 속성
  * sandbox = iframe으로 불러온 페이지에 포함된 javascript나 <input>태그 등의 기술을 차단하는 속성

<video>
  * controls = 동영상을 재생할떄 필요한 메뉴가 나오게 해주는 속성
  * autoplay = 동영상이 화면에 송출됬을때 자동으로 실행 시키는 속성
  * loop = 동영상이 끝났뒤에 다시 실행하게 해주는 속성
-------------------------------------------------------------------------------------------------------------
- HTML 역사 -

1. GML 마크업 언어의 시초(1960)
2. SGML
3. SGMLguid(17개의 태그)
4. HTML(17개의 기존의 태그의 + a태그) 팀 버너스리 
-------------------------------------------------------------------------------------------------------------
- 부가적인 것 -

* DOCTYPE(Document type declaration) : 문서의 타입을 선언하는 문자 = 사용법 : <!DOCTYPE html>
* <font> </font> = 퇴출된 태그로 사용하지 않는 것을 권장함 CSS로 대체됨
                  (시각적인 것만 있을뿐 정보적의미가 들어있지 않음)
* <meat> = 웹페이지를 설명해줄때 사용함
* <meta name ="viewport" content = " width = device-width, initial = 1.0 ">
  : 이 코드를 사용하면 각 디바이스크기에 맞춰서 웹사이트를 띄어주는 기능을 가지고 있다.
    기본적으로 넣어야하는 코드이다.
* HTML은 의미론적인 부분을 중점으로 코딩해야함.
* Can I use 웹사이트 : 새로 도입된기술을 사용할 수 있는가에 대한 여러 자료를들을 보여주는 사이트


-------------------------------------------------------------------------------------------------------------
- 의미론적 태그 -
header = 화면 상단에 위치하는 문서의 전체적인 정보를 정의
article = 본문을 정의
footer = 화면 하단에 위치하는 문서의 전체적인 정보를 정의
section = 위에 속하지 않는 부가적인 것들을 정의
aside = 광고와 같이 페이지의 내용과는 관계가 적은 내용을 정의





